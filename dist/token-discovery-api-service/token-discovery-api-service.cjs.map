{"version":3,"file":"token-discovery-api-service.cjs","sourceRoot":"","sources":["../../src/token-discovery-api-service/token-discovery-api-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractTokenDiscoveryApiService } from './abstract-token-discovery-api-service';\nimport type {\n  MoralisTokenResponseItem,\n  TopGainersParams,\n  TopLosersParams,\n  TrendingTokensParams,\n  BlueChipParams,\n} from '../types';\n\nexport class TokenDiscoveryApiService extends AbstractTokenDiscoveryApiService {\n  readonly #baseUrl: string;\n\n  constructor(baseUrl: string) {\n    super();\n    if (!baseUrl) {\n      throw new Error('Portfolio API URL is not set');\n    }\n    this.#baseUrl = baseUrl;\n  }\n\n  async getTrendingTokensByChains(\n    trendingTokensParams?: TrendingTokensParams,\n  ): Promise<MoralisTokenResponseItem[]> {\n    const url = new URL('/tokens-search/trending', this.#baseUrl);\n\n    if (\n      trendingTokensParams?.chains &&\n      trendingTokensParams.chains.length > 0\n    ) {\n      url.searchParams.append('chains', trendingTokensParams.chains.join());\n    }\n    if (trendingTokensParams?.limit) {\n      url.searchParams.append('limit', trendingTokensParams.limit);\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Portfolio API request failed with status: ${response.status}`,\n      );\n    }\n\n    return response.json();\n  }\n\n  async getTopLosersByChains(\n    topLosersParams?: TopLosersParams,\n  ): Promise<MoralisTokenResponseItem[]> {\n    const url = new URL('/tokens-search/top-losers', this.#baseUrl);\n\n    if (topLosersParams?.chains && topLosersParams.chains.length > 0) {\n      url.searchParams.append('chains', topLosersParams.chains.join());\n    }\n    if (topLosersParams?.limit) {\n      url.searchParams.append('limit', topLosersParams.limit);\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Portfolio API request failed with status: ${response.status}`,\n      );\n    }\n\n    return response.json();\n  }\n\n  async getTopGainersByChains(\n    topGainersParams?: TopGainersParams,\n  ): Promise<MoralisTokenResponseItem[]> {\n    const url = new URL('/tokens-search/top-gainers', this.#baseUrl);\n\n    if (topGainersParams?.chains && topGainersParams.chains.length > 0) {\n      url.searchParams.append('chains', topGainersParams.chains.join());\n    }\n    if (topGainersParams?.limit) {\n      url.searchParams.append('limit', topGainersParams.limit);\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Portfolio API request failed with status: ${response.status}`,\n      );\n    }\n\n    return response.json();\n  }\n\n  async getBlueChipTokensByChains(\n    blueChipParams?: BlueChipParams,\n  ): Promise<MoralisTokenResponseItem[]> {\n    const url = new URL('/tokens-search/blue-chip', this.#baseUrl);\n\n    if (blueChipParams?.chains && blueChipParams.chains.length > 0) {\n      url.searchParams.append('chains', blueChipParams.chains.join());\n    }\n    if (blueChipParams?.limit) {\n      url.searchParams.append('limit', blueChipParams.limit);\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Portfolio API request failed with status: ${response.status}`,\n      );\n    }\n\n    return response.json();\n  }\n}\n"]}