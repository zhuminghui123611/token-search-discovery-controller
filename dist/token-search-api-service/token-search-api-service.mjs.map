{"version":3,"file":"token-search-api-service.mjs","sourceRoot":"","sources":["../../src/token-search-api-service/token-search-api-service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,6BAA6B,EAAE,gDAA4C;AAOpF,MAAM,OAAO,qBAAsB,SAAQ,6BAA6B;IAGtE,YAAY,OAAe;QACzB,KAAK,EAAE,CAAC;QAHD,iDAAiB;QAIxB,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACjD;QACD,uBAAA,IAAI,kCAAY,OAAO,MAAA,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,YAAY,CAChB,iBAAqC;QAErC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,gBAAgB,EAAE,uBAAA,IAAI,sCAAS,CAAC,CAAC;QAErD,IAAI,iBAAiB,EAAE,MAAM,IAAI,iBAAiB,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACpE,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;SACpE;QACD,IAAI,iBAAiB,EAAE,KAAK,EAAE;YAC5B,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC3D;QACD,IAAI,iBAAiB,EAAE,KAAK,EAAE;YAC5B,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC3D;QAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;YAChC,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;YAChB,MAAM,IAAI,KAAK,CACb,6CAA6C,QAAQ,CAAC,MAAM,EAAE,CAC/D,CAAC;SACH;QAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,qBAAqB,CACzB,0BAAsD;QAEtD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,0BAA0B,EAAE,uBAAA,IAAI,sCAAS,CAAC,CAAC;QAC/D,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,0BAA0B,CAAC,KAAK,CAAC,CAAC;QAEnE,IAAI,0BAA0B,EAAE,KAAK,EAAE;YACrC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,0BAA0B,CAAC,KAAK,CAAC,CAAC;SACpE;QAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;YAChC,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;YAChB,MAAM,IAAI,KAAK,CACb,6CAA6C,QAAQ,CAAC,MAAM,EAAE,CAC/D,CAAC;SACH;QAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;CACF","sourcesContent":["import { AbstractTokenSearchApiService } from './abstract-token-search-api-service';\nimport type {\n  SwappableTokenSearchParams,\n  TokenSearchParams,\n  TokenSearchResponseItem,\n} from '../types';\n\nexport class TokenSearchApiService extends AbstractTokenSearchApiService {\n  readonly #baseUrl: string;\n\n  constructor(baseUrl: string) {\n    super();\n    if (!baseUrl) {\n      throw new Error('Portfolio API URL is not set');\n    }\n    this.#baseUrl = baseUrl;\n  }\n\n  async searchTokens(\n    tokenSearchParams?: TokenSearchParams,\n  ): Promise<TokenSearchResponseItem[]> {\n    const url = new URL('/tokens-search', this.#baseUrl);\n\n    if (tokenSearchParams?.chains && tokenSearchParams.chains.length > 0) {\n      url.searchParams.append('chains', tokenSearchParams.chains.join());\n    }\n    if (tokenSearchParams?.query) {\n      url.searchParams.append('query', tokenSearchParams.query);\n    }\n    if (tokenSearchParams?.limit) {\n      url.searchParams.append('limit', tokenSearchParams.limit);\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Portfolio API request failed with status: ${response.status}`,\n      );\n    }\n\n    return response.json();\n  }\n\n  async searchSwappableTokens(\n    swappableTokenSearchParams: SwappableTokenSearchParams,\n  ): Promise<TokenSearchResponseItem[]> {\n    const url = new URL('/tokens-search/swappable', this.#baseUrl);\n    url.searchParams.append('query', swappableTokenSearchParams.query);\n\n    if (swappableTokenSearchParams?.limit) {\n      url.searchParams.append('limit', swappableTokenSearchParams.limit);\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Portfolio API request failed with status: ${response.status}`,\n      );\n    }\n\n    return response.json();\n  }\n}\n"]}